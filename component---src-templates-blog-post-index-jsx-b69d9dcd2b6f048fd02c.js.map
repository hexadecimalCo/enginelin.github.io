{"version":3,"sources":["webpack:///./src/components/Header/mini.jsx","webpack:///./src/layouts/GeneralLayout/index.jsx","webpack:///./src/templates/BlogPost/styled.js","webpack:///./src/templates/BlogPost/index.jsx"],"names":["HeaderMini","open","setOpen","title","to","alt","src","avatar","className","item","name","map","key","type","onClick","icon","faTimes","faBars","defaultProps","active","ScrollHeaderLayout","children","useState","Footer","BackTop","PostContainer","styled","div","theme","mediaQueryMobile","mediaQueryDesktop","Title","h1","Date","p","PostContent","query","Template","data","markdownRemark","frontmatter","html","year","dayjs","date","format","dangerouslySetInnerHTML","__html"],"mappings":"yQAeA,SAASA,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACpBC,EAAQ,mBAOd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,GAAG,IAAID,MAAOA,EAAOE,IAAKF,GAClC,yBAAKG,IAAKC,IAAQF,IAAKF,IACvB,4BAAKA,IAGP,kBAAC,IAAD,CAAKK,UAAWP,GAAQ,QACtB,4BAfQ,CACd,CAAEQ,KAAM,IAAKC,KAAM,OAeFC,KAAI,gBAAGF,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,wBAAIE,IAAKF,GACP,kBAAC,IAAD,CAAMN,GAAIK,EAAMJ,IAAKK,EAAMP,MAAOO,GAC/BA,SAOX,kBAAC,IAAD,CAAgBG,KAAK,SAASC,QAAS,kBAAMZ,GAASD,KACpD,kBAAC,IAAD,CAAiBc,KAAMd,EAAOe,IAAUC,SAWlDjB,EAAWkB,aAAe,CACxBC,QAAQ,GAGKnB,Q,oCChCAoB,MAnBf,YAA2C,IAAbC,EAAY,EAAZA,SAAY,EAChBC,oBAAS,GAA1BrB,EADiC,KAC3BC,EAD2B,KAGxC,OACE,oCACE,kBAAC,EAAD,CAAQD,KAAMA,EAAMC,QAASA,IAC7B,kBAAC,IAAD,KACE,8BAAOmB,IAET,kBAACE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,Q,8xBCfC,IAAMC,EAAgBC,IAAOC,IAAV,IAIQC,IAAMC,iBAGND,IAAME,mBAK3BC,EAAQL,IAAOM,GAAV,KAILC,EAAOP,IAAOQ,EAAV,KAmBJC,EAAcT,IAAOC,IAAV,KCTjB,IAAMS,EAAK,aAeHC,UArCf,YAA6B,IAAD,IAARC,KACiBC,eAA3BC,EADkB,EAClBA,YAAaC,EADK,EACLA,KACfC,EAAOC,IAAMH,EAAYI,MAAMC,OAAO,QACtCD,EAAOD,IAAMH,EAAYI,MAAMC,OAAO,SAE5C,OACE,kBAAC,EAAD,KACE,kBAACpB,EAAD,KACE,kBAACM,EAAD,KAAQS,EAAYrC,OACpB,kBAAC,EAAD,KACE,8BACE,2BAAIuC,IAELE,GAGH,kBAACT,EAAD,CAAaW,wBAAyB,CAAEC,OAAQN","file":"component---src-templates-blog-post-index-jsx-b69d9dcd2b6f048fd02c.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport avatar from '@/images/avatar.jpeg'\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons'\nimport {\n  LogoMini,\n  MenuButtonMini,\n  NavbarContainer,\n  PageNavbarMini,\n  Nav,\n} from './styled'\n\nfunction HeaderMini({ open, setOpen }) {\n  const title = \"EngineLin's Blog\"\n  const navList = [\n    { item: '/', name: '文章' },\n    // { item: '/about', name: '關於我' },\n    // { item: '/', name: '合作' },\n  ]\n\n  return (\n    <PageNavbarMini>\n      <NavbarContainer>\n        <LogoMini to=\"/\" title={title} alt={title}>\n          <img src={avatar} alt={title} />\n          <h1>{title}</h1>\n        </LogoMini>\n\n        <Nav className={open && 'open'}>\n          <ul>\n            {navList.map(({ item, name }) => (\n              <li key={name}>\n                <Link to={item} alt={name} title={name}>\n                  {name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </Nav>\n\n        <MenuButtonMini type=\"button\" onClick={() => setOpen(!open)}>\n          <FontAwesomeIcon icon={open ? faTimes : faBars} />\n        </MenuButtonMini>\n      </NavbarContainer>\n    </PageNavbarMini>\n  )\n}\n\nHeaderMini.propTypes = {\n  active: PropTypes.bool,\n}\n\nHeaderMini.defaultProps = {\n  active: false,\n}\n\nexport default HeaderMini\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Header from '@/components/Header/mini.jsx'\nimport Footer from '@/components/Footer/index.jsx'\nimport BackTop from '@/components/BackTop/index.jsx'\nimport { Container } from '@/layouts/styled'\n\nfunction ScrollHeaderLayout({ children }) {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <>\n      <Header open={open} setOpen={setOpen} />\n      <Container>\n        <main>{children}</main>\n      </Container>\n      <Footer />\n      <BackTop />\n    </>\n  )\n}\n\nScrollHeaderLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default ScrollHeaderLayout\n","import styled from 'styled-components'\nimport { theme } from '@/common/theme'\n\nexport const PostContainer = styled.div`\n  margin: 0 auto;\n  width: 100%;\n\n  @media screen and (min-width: ${theme.mediaQueryMobile}) {\n    padding: 0;\n  }\n  @media screen and (min-width: ${theme.mediaQueryDesktop}) {\n    width: 750px;\n  }\n`\n\nexport const Title = styled.h1`\n  line-height: 1.4;\n  font-weight: 500;\n`\nexport const Date = styled.p`\n  text-align: end;\n\n  span {\n    display: inline-block;\n    padding: 0 5px;\n    margin: 0 10px;\n    background: red;\n    transform: skew(-30deg);\n\n    p {\n      margin: 5px;\n      font-weight: 600;\n      color: white;\n      transform: skew(30deg);\n    }\n  }\n`\n\nexport const PostContent = styled.div`\n`\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport dayjs from 'dayjs'\n\nimport Layout from '@/layouts/GeneralLayout'\nimport { PostContainer, Title, Date, PostContent } from './styled.js'\n\nfunction Template({ data }) {\n  const { frontmatter, html } = data.markdownRemark\n  const year = dayjs(frontmatter.date).format('YYYY')\n  const date = dayjs(frontmatter.date).format('MM/DD')\n\n  return (\n    <Layout>\n      <PostContainer>\n        <Title>{frontmatter.title}</Title>\n        <Date>\n          <span>\n            <p>{year}</p>\n          </span>\n          {date}\n        </Date>\n\n        <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n      </PostContainer>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        tags\n        hot\n      }\n    }\n  }\n`\n\nexport default Template\n"],"sourceRoot":""}